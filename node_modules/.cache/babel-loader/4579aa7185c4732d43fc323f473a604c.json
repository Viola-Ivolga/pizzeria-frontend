{"ast":null,"code":"import API from \"../../API\";\nimport { signInAction, signOutAction, signUpAction } from \"./actions\";\n/*****learn about parse */\n\nconst api = new API();\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\";\nexport const fetchUserFromLocalStorage = () => {\n  return async dispatch => {\n    const userJASON = localStorage.getItem(LOGIN_USER_KEY);\n\n    if (userJASON && userJASON.token !== \"\") {\n      dispatch(signInAction(JSON.parse(userJSON)));\n    }\n  };\n};\nexport const signUp = (user_name, email, password) => {\n  return async dispatch => {\n    if (user_name === \"\" || email === \"\" || password === \"\") {\n      alert(\"Please fill out all the fields\");\n      return false;\n    }\n    /*************learn about .then method */\n\n\n    return API.signUp(user_name, email, password).then(user => {\n      dispatch(signUpAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      alert(\"failed to connect API to signup user \");\n    });\n  };\n};\nexport const signIn = (email, password) => {\n  return async dispatch => {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out all the fields\");\n      return false;\n    }\n\n    return API.signIn(email, password).then(user => {\n      dispatch(signInAction(user));\n      localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user));\n      dispatch(push(\"/\"));\n    }).catch(error => {\n      alert(\"failed to connect API to signin user \");\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch(signOutAction());\n    localStorage.removeItem(LOGIN_USER_KEY);\n    dispatch(push(\"/signin\"));\n  };\n};","map":{"version":3,"names":["API","signInAction","signOutAction","signUpAction","api","LOGIN_USER_KEY","fetchUserFromLocalStorage","dispatch","userJASON","localStorage","getItem","token","JSON","parse","userJSON","signUp","user_name","email","password","alert","then","user","setItem","stringify","push","catch","error","signIn","signOut","removeItem"],"sources":["/Users/violettafilippova/Desktop/pizza/frontend/src/reducks/users/operations.js"],"sourcesContent":["import API from \"../../API\";\nimport { signInAction, signOutAction, signUpAction } from \"./actions\";\n\n/*****learn about parse */\nconst api=new API()\nconst LOGIN_USER_KEY = \"LOGIN_USER_KEY\"\n\nexport const fetchUserFromLocalStorage = () => {\n    return async(dispatch)=>{\n        const userJASON = localStorage.getItem(LOGIN_USER_KEY)\n        if (userJASON && userJASON.token !== \"\"){\n            dispatch(signInAction(JSON.parse(userJSON)))\n        }\n    }\n\n}\n\nexport const signUp = (user_name,email,password)=>{\n    return async(dispatch)=>{\n        if (user_name === \"\" || email === \"\" || password ===\"\"){\n            alert(\"Please fill out all the fields\")\n            return false\n        }\n/*************learn about .then method */\n        return API \n        .signUp(user_name,email,password)\n        .then((user) => {\n            dispatch(signUpAction(user))\n            localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user))\n            dispatch(push(\"/\"))\n        })\n\n        .catch((error)=>{\n            alert(\"failed to connect API to signup user \")\n        })\n    }\n}\n\nexport const signIn = (email,password)=>{\n    return async(dispatch)=>{\n        if (email === \"\" || password ===\"\"){\n            alert(\"Please fill out all the fields\")\n            return false\n        }\n        return API \n        .signIn(email,password)\n        .then((user) => {\n            dispatch(signInAction(user))\n            localStorage.setItem(LOGIN_USER_KEY, JSON.stringify(user))\n            dispatch(push(\"/\"))\n        })\n\n        .catch((error)=>{\n            alert(\"failed to connect API to signin user \")\n        })\n    }\n}\n\nexport const signOut = ()=>{\n    return async(dispatch)=>{\n        dispatch(signOutAction())\n        localStorage.removeItem(LOGIN_USER_KEY)\n        dispatch(push(\"/signin\"))\n    }\n}"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,QAA0D,WAA1D;AAEA;;AACA,MAAMC,GAAG,GAAC,IAAIJ,GAAJ,EAAV;AACA,MAAMK,cAAc,GAAG,gBAAvB;AAEA,OAAO,MAAMC,yBAAyB,GAAG,MAAM;EAC3C,OAAO,MAAMC,QAAN,IAAiB;IACpB,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,cAArB,CAAlB;;IACA,IAAIG,SAAS,IAAIA,SAAS,CAACG,KAAV,KAAoB,EAArC,EAAwC;MACpCJ,QAAQ,CAACN,YAAY,CAACW,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAD,CAAb,CAAR;IACH;EACJ,CALD;AAOH,CARM;AAUP,OAAO,MAAMC,MAAM,GAAG,CAACC,SAAD,EAAWC,KAAX,EAAiBC,QAAjB,KAA4B;EAC9C,OAAO,MAAMX,QAAN,IAAiB;IACpB,IAAIS,SAAS,KAAK,EAAd,IAAoBC,KAAK,KAAK,EAA9B,IAAoCC,QAAQ,KAAI,EAApD,EAAuD;MACnDC,KAAK,CAAC,gCAAD,CAAL;MACA,OAAO,KAAP;IACH;IACT;;;IACQ,OAAOnB,GAAG,CACTe,MADM,CACCC,SADD,EACWC,KADX,EACiBC,QADjB,EAENE,IAFM,CAEAC,IAAD,IAAU;MACZd,QAAQ,CAACJ,YAAY,CAACkB,IAAD,CAAb,CAAR;MACAZ,YAAY,CAACa,OAAb,CAAqBjB,cAArB,EAAqCO,IAAI,CAACW,SAAL,CAAeF,IAAf,CAArC;MACAd,QAAQ,CAACiB,IAAI,CAAC,GAAD,CAAL,CAAR;IACH,CANM,EAQNC,KARM,CAQCC,KAAD,IAAS;MACZP,KAAK,CAAC,uCAAD,CAAL;IACH,CAVM,CAAP;EAWH,CAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAMQ,MAAM,GAAG,CAACV,KAAD,EAAOC,QAAP,KAAkB;EACpC,OAAO,MAAMX,QAAN,IAAiB;IACpB,IAAIU,KAAK,KAAK,EAAV,IAAgBC,QAAQ,KAAI,EAAhC,EAAmC;MAC/BC,KAAK,CAAC,gCAAD,CAAL;MACA,OAAO,KAAP;IACH;;IACD,OAAOnB,GAAG,CACT2B,MADM,CACCV,KADD,EACOC,QADP,EAENE,IAFM,CAEAC,IAAD,IAAU;MACZd,QAAQ,CAACN,YAAY,CAACoB,IAAD,CAAb,CAAR;MACAZ,YAAY,CAACa,OAAb,CAAqBjB,cAArB,EAAqCO,IAAI,CAACW,SAAL,CAAeF,IAAf,CAArC;MACAd,QAAQ,CAACiB,IAAI,CAAC,GAAD,CAAL,CAAR;IACH,CANM,EAQNC,KARM,CAQCC,KAAD,IAAS;MACZP,KAAK,CAAC,uCAAD,CAAL;IACH,CAVM,CAAP;EAWH,CAhBD;AAiBH,CAlBM;AAoBP,OAAO,MAAMS,OAAO,GAAG,MAAI;EACvB,OAAO,MAAMrB,QAAN,IAAiB;IACpBA,QAAQ,CAACL,aAAa,EAAd,CAAR;IACAO,YAAY,CAACoB,UAAb,CAAwBxB,cAAxB;IACAE,QAAQ,CAACiB,IAAI,CAAC,SAAD,CAAL,CAAR;EACH,CAJD;AAKH,CANM"},"metadata":{},"sourceType":"module"}