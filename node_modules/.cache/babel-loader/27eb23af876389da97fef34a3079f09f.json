{"ast":null,"code":"import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\nvar baseURL;\n\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n  baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n  baseURL = 'http://127.0.0.1:8000';\n}\n/*********************** */\n\n\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\n\napi.interceptors.request.use(config => {\n  if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n    config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n  }\n\n  return config;\n}, err => {\n  console.error(err);\n});\nexport default class API {\n  constructor() {\n    this.signUp = async (user_name, password, email) => {\n      const signup = await api.post(\"signup/\", {\n        user_name: user_name,\n        password: password,\n        email: email\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return signup;\n    };\n\n    this.signIn = async (email, password) => {\n      const signin = await api.post(\"signin/\", {\n        password: password,\n        email: email\n      }).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return signin;\n    };\n\n    this.getUser = async () => {\n      const user = await api;\n      const url = ''.get(url).then(response => {\n        return response.data;\n      }).catch(error => {\n        throw new Error(error);\n      });\n      return user;\n    };\n\n    this.getItems = async params => {\n      try {\n        const response = await api.get('items/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.getCart = async params => {\n      try {\n        const response = await api.get('carts/');\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.addCart = async params => {\n      try {\n        const response = await api.get('carts/add/', {\n          params\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n\n    this.updateCart = async (cartItem, newCount) => {\n      try {\n        const response = await api.get('cart/update/' + cartItem.id + '/', {\n          newCount\n        });\n        return response.data;\n      } catch (error) {\n        throw new Error(error);\n      }\n    };\n  }\n\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","baseURL","process","env","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL","api","create","headers","interceptors","request","use","config","requireToken","localStorage","getItem","common","JSON","parse","token","err","console","error","API","signUp","user_name","password","email","signup","post","then","response","data","catch","Error","signIn","signin","getUser","user","url","get","getItems","params","getCart","addCart","updateCart","cartItem","newCount","id"],"sources":["/Users/violettafilippova/Desktop/pizza/frontend/src/API.js"],"sourcesContent":["import axios from 'axios';\nconst LOGIN_USER_KEY = 'WD_FORUM_LOGIN_USER_KEY';\n\nvar baseURL;\nif (process.env.REACT_APP_ENVIRONMENT && process.env.REACT_APP_ENVIRONMENT === 'PRODUCTION') {\n    baseURL = process.env.REACT_APP_API_BASE_URL;\n} else {\n    baseURL = 'http://127.0.0.1:8000';\n}\n/*********************** */\nconst api = axios.create({\n    baseURL: baseURL,\n    headers: {\n        'Content-Type': 'application/json'\n    }\n});\n\n/**\n * Add requireToken: true in request config, for API that required Authorization token\n */\napi.interceptors.request.use(\n    config => {\n        if (config.requireToken && localStorage.getItem(LOGIN_USER_KEY)) {\n            config.headers.common['Authorization'] = JSON.parse(localStorage.getItem(LOGIN_USER_KEY)).token;\n        }\n\n        return config;\n    },\n    err => {\n        console.error(err);\n    }\n);\n\nexport default class API {\n    // getPosts = async params => {\n    //     try {\n    //         const response = await api.get('/posts/', { params });\n    //         return response.data;\n    //     } catch (error) {\n    //         throw new Error(error);\n    //     }\n    // };\n    // addPost = async postBody => {\n    //     const formData = new FormData();\n\n    //     for (const key in postBody) {\n    //         formData.append(key, postBody[key]);\n    //     }\n\n    //     try {\n    //         const response = await api.post('/posts/add/', formData);\n    //         return response.data;\n    //     } catch (error) {\n    //         throw new Error(error);\n    //     }\n    // };\n    // deletePost = async id => {\n    //     try {\n    //         return await api.delete(`/posts/delete/${id}/`);\n    //     } catch (error) {\n    //         throw new Error(error);\n    //     }\n    // };\n    signUp = async(user_name,password,email) =>{\n        const signup = await api\n        .post(\"signup/\",{\n            user_name:user_name, password:password, email:email\n        })\n        .then((response)=>{\n            return response.data\n        })\n\n        .catch((error)=>{\n            throw new Error(error)\n        })\n\n    return signup \n    }\n\n\n\n    signIn = async(email, password) =>{\n        const signin = await api\n        .post(\"signin/\",{\n             password:password, email:email\n        })\n        .then((response)=>{\n            return response.data\n        })\n\n        .catch((error)=>{\n            throw new Error(error)\n        })\n        \n    return signin\n    }\n\n\n    getUser = async() =>{\n        const user = await api\n        const url=''\n        .get(url)\n       \n        .then((response)=>{\n            return response.data\n        })\n\n        .catch((error)=>{\n            throw new Error(error)\n        })\n        \n    return user\n    }\n        getItems = async params => {\n        try {\n            const response = await api.get('items/', { params });\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n\n    getCart = async params => {\n        try {\n            const response = await api.get('carts/');\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n    addCart = async params => {\n        try {\n            const response = await api.get('carts/add/', { params } ) ;\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n\n    updateCart = async (cartItem,newCount) => {\n        try {\n            const response = await api.get('cart/update/'+ cartItem.id + '/' , {newCount} );\n            return response.data;\n        } catch (error) {\n            throw new Error(error);\n        }\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}