{"ast":null,"code":"import API from \"../../API\";\nimport { fetchCartAction, addCartAction, increaseCartAction, decreaseCartAction } from \"./actions\";\nconst api = new API();\nexport const fetchCart = () => {\n  return async dispatch => {\n    return api.getCart().then(carts => {\n      const subtotal = calculateSubtotal(carts.results);\n      dispatch(fetchCartAction(carts.results, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    return api.addCart(item.id).then(addedCart => {\n      let prevCart = getState().carts.list;\n      addedCart[\"item\"] = item;\n      prevCart.push(addedCart);\n      const subtotal = calculateSubtotal(prevCart);\n      dispatch(addCartAction(prevCart, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const increaseCart = cartItem => {\n  return async (dispatch, getState) => {\n    let prevCart = getState().cart.list;\n    let matchCart = prevCart.filter(cart => cart.id === cartItem);\n    let newCount = matchCart[0].quantity + 1;\n    return api.updateCart(cartItem, newCount).then(newCart => {\n      prevCart = prevCart.filter(cart => cart.id !== cartItem);\n      prevCart.push(newCart);\n      const subtotal = calculateSubtotal(prevCart);\n      dispatch(increaseCartAction(prevCart, subtotal));\n    }).catch(error => {\n      alert(\"Failed to connect API carts\");\n    });\n  };\n};\nexport const decreaseCart = cartItem => {\n  return async (dispatch, getState) => {\n    let prevCart = getState().cart.list;\n    let matchCart = prevCart.filter(cart => cart.id === cartItem);\n    let newCount = matchCart[0].quantity - 1;\n\n    if (newCount > 0) {\n      return api.updateCart(cartItem, newCount).then(newCart => {\n        prevCart = prevCart.filter(cart => cart.id !== cartItem);\n        prevCart.push(newCart);\n        const subtotal = calculateSubtotal(prevCart);\n        dispatch(decreaseCartAction(prevCart, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API carts\");\n      });\n    } else {\n      return api.deleteCart(cartItem).then(() => {\n        prevCart = prevCart.filter(cart => cart.id !== cartItem);\n        const subtotal = calculateSubtotal(prevCart);\n        dispatch(decreaseCartAction(prevCart, subtotal));\n      }).catch(error => {\n        alert(\"Failed to connect API carts\");\n      });\n    }\n  };\n};\n\nconst calculateSubtotal = cart => {\n  let subtotal = 0;\n\n  for (let pizzaItem in cart) {\n    subtotal += Number(cart[pizzaItem].item.price * cart[pizzaItem].quantity);\n  }\n\n  return subtotal;\n};","map":{"version":3,"names":["API","fetchCartAction","addCartAction","increaseCartAction","decreaseCartAction","api","fetchCart","dispatch","getCart","then","carts","subtotal","calculateSubtotal","results","catch","error","alert","addCart","item","getState","id","addedCart","prevCart","list","push","increaseCart","cartItem","cart","matchCart","filter","newCount","quantity","updateCart","newCart","decreaseCart","deleteCart","pizzaItem","Number","price"],"sources":["/Users/violettafilippova/Desktop/pizza/frontend/src/reducks/carts/operations.js"],"sourcesContent":["import API from \"../../API\"\nimport { fetchCartAction,addCartAction,increaseCartAction,decreaseCartAction } from \"./actions\"\n\n\n\nconst api = new API()\nexport const fetchCart = () =>{\n    return async dispatch=>{\n        return api\n        .getCart()\n        .then((carts) => {\n            const subtotal = calculateSubtotal(carts.results)\n            dispatch(fetchCartAction(carts.results,subtotal))\n        })   \n        .catch((error) => {\n            alert(\"Failed to connect API carts\")\n        })\n    }}\n\n\nexport const addCart = (item) =>{\n        return async (dispatch, getState)=>{\n            return api\n            .addCart(item.id)\n            .then((addedCart) => {\n                let prevCart = getState().carts.list\n                addedCart[\"item\"]=item\n                prevCart.push(addedCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(addCartAction(prevCart,subtotal))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n    }} \n\n\n    export const increaseCart = (cartItem) =>{\n        return async (dispatch, getState)=>{\n            let prevCart = getState().cart.list\n            let matchCart = prevCart.filter((cart)=> cart.id === cartItem)\n            let newCount = matchCart[0].quantity +1\n            return api\n            .updateCart(cartItem,newCount)\n            .then((newCart) => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                prevCart.push(newCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(increaseCartAction(prevCart,subtotal))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n    }} \n\n\n\n    export const decreaseCart = (cartItem) =>{\n        return async (dispatch, getState)=>{\n            let prevCart = getState().cart.list\n            let matchCart = prevCart.filter((cart)=> cart.id === cartItem)\n            let newCount = matchCart[0].quantity -1\n            if (newCount > 0) {\n                return api\n            .updateCart(cartItem,newCount)\n            .then((newCart) => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                prevCart.push(newCart)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(decreaseCartAction(prevCart,subtotal))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n            }else{\n                return api\n            .deleteCart(cartItem)\n            .then(() => {\n                prevCart=prevCart.filter((cart) => cart.id !== cartItem)\n                const subtotal = calculateSubtotal(prevCart)\n                dispatch(decreaseCartAction(prevCart,subtotal))\n            })   \n            .catch((error) => {\n                alert(\"Failed to connect API carts\")\n            })\n            }\n            \n    }} \n\n    const calculateSubtotal = (cart) =>{\n        let subtotal=0\n        for(let pizzaItem in cart){\n            subtotal += Number(cart[pizzaItem].item.price * cart[pizzaItem].quantity)\n\n    \n        }\n        return subtotal\n    }\n        \n\n        "],"mappings":"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"},"metadata":{},"sourceType":"module"}